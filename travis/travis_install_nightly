#!/bin/bash
set -v

pip install -q QUnitSuite flake8 coveralls Click oca-pylint-plugin > /dev/null 2>&1

## We can exit here and do nothing if this only a LINT check
if [ "${TESTS}" != "1" ] && [ "${LINT_CHECK}" == "1" ]; then
    exit 0
fi

# For backward compatibility, take version from parameter if it's not globally set
if [ "x${VERSION}" == "x" ] ; then
    VERSION="${1}"
    echo "WARNING: no env variable set for VERSION. Using '${1}'."
fi

: ${ODOO_REPO:="odoo/odoo"}  # default value, if not set
IFS="/" read -a REPO <<< "${ODOO_REPO}"
ODOO_URL="https://github.com/${REPO[0]}/${REPO[1]}/archive/${VERSION}.tar.gz"
#ODOO_URL="https://github.com/${REPO[0]}/${REPO[1]}.git"

echo ${REPO_REQUIREMENTS}

if [ "x${REPO_REQUIREMENTS}" == "x" ] ; then
    echo "Installing Odoo ${ODOO_URL}"
    wget -nv -O odoo.tar.gz ${ODOO_URL}
    tar -xf odoo.tar.gz -C ${HOME}
    #git_update ${ODOO_URL} -b ${VERSION} ${HOME}/${REPO[0]}-${VERSION}
else
    echo "Installing Odoo from cache"
    export REPO=$(python -c "print '${REPO[0]}'.lower()")
    export BRANCH=$(python -c "print '${VERSION}'.lower()")
    export ODOO_PATH=${HOME}/${REPO[1]}-${BRANCH}
    chown `(whoami)`:`(whoami)` -R ${REPO_REQUIREMENTS}
    ln -sf ${REPO_REQUIREMENTS}/odoo ${ODOO_PATH}
    cd ${ODOO_PATH} \
       && git checkout -f ${REPO}/${BRANCH} \
       && git reset --hard ${REPO}/${BRANCH}
fi


if [ "x${WITHOUT_DEPENDENCIES}" == "x" ] ; then
    echo "Installing dependencies"
    apt-get -q -y install expect-dev  # provides unbuffer utility
    apt-get -q -y install python-lxml  # because pip installation is slooow

    pip install -q QUnitSuite flake8 coveralls pylint
    pip install -q -r $(dirname ${BASH_SOURCE[0]})/requirements.txt

    #  Install new dependence: npm package
    wget -qO- https://deb.nodesource.com/setup | sudo bash -
    apt-get install nodejs
    npm install -g less
    npm install -g less-plugin-clean-css

fi

echo "Getting addons dependencies"
clone_oca_dependencies ${HOME} ${TRAVIS_BUILD_DIR}/..

# Workaround to force using system site packages (see https://github.com/Shippable/support/issues/241#issuecomment-57947925)
rm -f $VIRTUAL_ENV/lib/python2.7/no-global-site-packages.txt

pip install --user -q -r $(dirname ${BASH_SOURCE[0]})/requirements.txt

# Use reference .coveragerc
cp ${HOME}/maintainer-quality-tools/cfg/.coveragerc .

$(dirname ${BASH_SOURCE[0]})/shippable_install_nightly
wget -q https://raw.githubusercontent.com/Vauxoo/pylint-conf/master/conf/pylint_vauxoo_light.cfg -O ${HOME}/maintainer-quality-tools/travis/cfg/travis_run_pylint.cfg


# Expected directory structure:
#
#    HOME/
#     |___ <OdooRepo>-<Branch>/         <-- Odoo Server
#     |___ maintainer-quality-tools/
#     |___ build/<Owner>/<TestedRepo>/
#     |___ <DependencyRepo1>/
#     |___ <DependencyRepo2>/
#     |...
echo "Content of ${HOME}:"
ls -l ${HOME}

#!/bin/bash

set -v

if [ "x${WITHOUT_DEPENDENCIES}" == "x" ] ; then
    echo "Install webkit and patched process"
    sudo apt-get install wkhtmltopdf
    mkdir -p /tmp/webkit_patched
    wget -O /tmp/webkit_patched/wkhtmltopdf.tar.bz2 https://wkhtmltopdf.googlecode.com/files/wkhtmltopdf-0.11.0_rc1-static-amd64.tar.bz2
    bzip2 -dc /tmp/webkit_patched/wkhtmltopdf.tar.bz2 | tar -xvO >/tmp/webkit_patched/webkit-patched
    sudo cp /tmp/webkit_patched/webkit-patched /usr/bin/wkhtmltopdf
fi

exit 0
