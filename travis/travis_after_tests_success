#!/usr/bin/env python

import os
import logging

_logger = logging.getLogger(__name__)


try:
    from coverage.cmdline import main as coverage_main
except ImportError as e:
    _logger.error("The coverage python library is not installed")
    exit(1)

test_enabled = (os.environ.get('TESTS', '0') == '1' and
                os.environ.get('TEST_ENABLE', '1') == '1')

if not test_enabled:
    exit(0)

build_dir = os.environ.get('TRAVIS_BUILD_DIR') or os.environ.get('CI_PROJECT_DIR') or ''
coveragerc = os.path.join(build_dir, '.coveragerc')
coverage_min = int(os.environ.get('COVERAGE_MIN', '60'))

if not os.path.isfile(coveragerc):
    _logger.error("Coverage configuration file not found: [%s]", coveragerc)
    exit(1)

html_extra_params = []
if 'CI_COMMIT_REF_SLUG' in os.environ:
    # coverage html extra params to store in artifacts directory of gitlab
    html_extra_params = [
        '-d', os.environ['CI_COMMIT_REF_SLUG'],
        '--title', "Branch: %s" % os.environ['CI_COMMIT_REF_NAME'],
    ]
# coverage html
coverage_main(["html", "--rcfile=%s" % coveragerc, "--show-contexts"] + html_extra_params)

# coverage txt
result = coverage_main(["report", "-m", "--show-missing", "--rcfile=%s" % coveragerc,
                        '--fail-under=%d' % coverage_min])
# fail only if coverage is under minimal value
exit(result != 2)
