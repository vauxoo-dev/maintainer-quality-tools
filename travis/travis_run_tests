#!/usr/bin/env python
# coding: utf-8

from __future__ import print_function
from __future__ import unicode_literals
import os
import subprocess
import sys
from travis_helpers import success_msg, fail_msg
from test_server import fname_log

def main(test_list):
    os.environ.pop("PG_CLUSTER", None)
    subprocess.call(["shippable_start_service"])

    args = sys.argv[1:]
    results = []
    for test in test_list:
        # keep backward compatibility with version as an argument
        test_w_args = test + args
        res = subprocess.call(test_w_args)
        results.append(res)

    print("Printing logfile:")
    if os.path.isfile(fname_log):
        with open(fname_log, "r") as f:
            print(f.read())

    print()
    print("+" + "="*39)
    print("|  Tests summary:")
    print("|" + "-"*39)
    for test, error in zip(test_list, results):
        desc = ' '.join(test)
        outcome = fail_msg if error else success_msg
        print("| {0:<28}{1}".format(desc, outcome))
    print("+" + "="*39)

    return(max(results))


if __name__ == '__main__':
    # Test list. Each test is a list with command + arguments.
    tests = []
    # By default, do lint checks
    if os.environ.get("LINT_CHECK", "1") == "1":
        tests.append(['test_flake8'])
        tests.append(['test_pylint'])
    if os.environ.get("LINT_CHECK", None) != "1":
        tests.append(['test_server'])
    exit(main(tests))
